{"version":3,"file":"lockerjs.js","sources":["../src/locker.js"],"sourcesContent":["'use strict';\n\n/**\n * Extremely light library that makes HTML5 storage usage easier to the edge.\n * No dependencies, no configuration.\n */\nexport default class {\n\t/**\n\t * Creates a locker\n\t * @param {object} storage\n\t * @example\n\t * // localStorage\n\t * const locker = new Locker(window.localStorage);\n\t * // sessionStorage\n\t * const locker = new Locker(window.sessionStorage);\n\t */\n\tconstructor(storage) {\n\t\tconst typeErrMsg = 'Invalid Storage object';\n\t\tconst refErrMsg = 'HTML5 Storage is not supported in this environment';\n\t\tif (storage !== window.localStorage &&\n\t\t\tstorage !== window.sessionStorage) {\n\t\t\tthrow new TypeError(typeErrMsg);\n\t\t}\n\t\tif (this._isSupported(storage)) {\n\t\t\tthis.storage = storage;\n\t\t} else {\n\t\t\tthrow new ReferenceError(refErrMsg);\n\t\t}\n\t}\n\n\t/**\n\t * Add a value into HTML5 window.localStorage.\n\t * @param {*} key\n\t * @param {*} value\n\t * @example\n\t * const myObj = {\n\t *     'name': 'John',\n\t *     'surname': 'Test',\n\t * };\n\t */\n\tadd(key, value) {\n\t\tkey = this._parseToString(key);\n\t\tswitch (typeof value) {\n\t\t\tcase 'object': {\n\t\t\t\tconst parsedVal = this._parseToString(value);\n\t\t\t\tthis.storage.setItem(key, parsedVal);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tthis.storage.setItem(key, value);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Add a value with a given key to the storage if a key is not already used.\n\t * Otherwise returns ReferenceError instead of overwriting it;\n\t * @param {*} key\n\t * @param {*} value\n\t * @example\n\t * locker.addSafely('Key 1', 1); //OK\n\t * locker.addSafely('Key 1', 123); //ReferenceError\n\t */\n\taddSafely(key, value) {\n\t\tkey = this._parseToString(key);\n\t\tconst keyExists = this.storage.getItem(key);\n\t\tif (keyExists) {\n\t\t\tthrow new ReferenceError('Provided key is already in use');\n\t\t}\n\t\tthis.add(key, value);\n\t}\n\n\t/**\n\t * Get a value from HTML5 window.localStorage\n\t * @param {*} key\n\t * @return {*}\n\t * @example\n\t * locker.get(123);\n\t */\n\tget(key) {\n\t\tkey = this._parseToString(key);\n\t\treturn this.storage.getItem(key);\n\t}\n\n\t/**\n\t * Saves map as-is into localstorage\n\t * @param {Map} map\n\t * @example\n\t * const sampleMap = new Map();\n\t * map.set(1, 'First entry');\n\t * map.set(2, 'Second entry');\n\t * locker.clear();\n\t * locker.saveMap(sampleMap);\n\t * locker.get(1); // 'First entry'\n\t * locker.get(2); // 'Second entry'\n\t */\n\tsaveMap(map) {\n\t\tconst isMap = Object.prototype.toString.call(map) === '[object Map]';\n\t\tif (!isMap) {\n\t\t\tthrow new TypeError('Must be of type Map');\n\t\t}\n\t\tfor (let [key, value] of map) {\n\t\t\tthis.add(key, value);\n\t\t}\n\t}\n\n\t/**\n\t * Saves and returns whole storage as map\n\t * @return {Map} HTML5 Storage copy\n\t * @example\n\t * locker.add(1, [1, 2, 3]);\n\t * const backup = locker.saveMap();\n\t */\n\tgetMap() {\n\t\tconst mappedStorage = new Map();\n\t\tfor (let i = 0; i < this.storage.length; i++) {\n\t\t\tlet tempKey = this._parseToString(this.storage.key(i));\n\t\t\tlet tempVal = this._parseToString(this.storage.getItem(tempKey));\n\t\t\tmappedStorage.set(tempKey, tempVal);\n\t\t}\n\t\treturn mappedStorage;\n\t}\n\n\t/**\n\t * Saves set as-is into localstorage\n\t * @param {Set} set\n\t * @example\n\t * const sampleSet = new Set();\n\t * set.add(1, 'First entry');\n\t * set.add(2, 'Second entry');\n\t * locker.clear();\n\t * locker.saveSet(sampleSet);\n\t * locker.get(1); // 'First entry'\n\t * locker.get(2); // 'Second entry'\n\t */\n\tsaveSet(set) {\n\t\tconst isSet = Object.prototype.toString.call(set) === '[object Set]';\n\t\tif (!isSet) {\n\t\t\tthrow new TypeError('Must be of type Set');\n\t\t}\n\t\tfor (let [key, value] of set.entries()) {\n\t\t\tthis.add(key, value);\n\t\t}\n\t}\n\n\t/**\n\t * Check whether the given key exists in the window.localStorage\n\t * @param {*} key\n\t * @return {boolean}\n\t * @example\n\t * locker.add(2, 1234);\n\t * locker.keyExists(2) // True\n\t * locker.keyExists({'name': 'John'}) // False\n\t */\n\tkeyExists(key) {\n\t\treturn !!this.storage.getItem(this._parseToString(key));\n\t}\n\n\t/**\n\t * Check whether the given value exists in the window.localStorage\n\t * @param {*} value\n\t * @return {boolean}\n\t * @example\n\t * const mySet = new Set();\n\t * mySet.set(\"Some array\", [1, 2, 3]);\n\t * locker.add(mySet);\n\t * locker.valueExists(mySet); // True\n\t */\n\tvalueExists(value) {\n\t\tconst parsedVal = this._parseToString(value);\n\t\treturn !!parsedVal;\n\t}\n\n\t/**\n\t * Clear the whole window.localStorage\n\t * @example\n\t * locker.add(1, [1, 2]);\n\t * locker.clear(); //Empty\n\t */\n\tclear() {\n\t\tthis.storage.clear();\n\t}\n\n\t/**\n\t * Removes HTML5 Storage values by keys provide in array\n\t * @param {array} arr\n\t * @example\n\t * const testObj = {\n\t *     'name': 'John',\n\t * }\n\t * locker.add(testObj, \"We like this customer!\");\n\t * locker.add(1, 123);\n\t * const keysToRemove = ['1', testObj];\n\t * locker.clearSpecified(keysToRemove); // Empty\n\t */\n\tclearSpecified(arr) {\n\t\tif (!Array.isArray(arr)) {\n\t\t\tthrow new TypeError('Array not provided');\n\t\t}\n\t\tfor (let i = 0; i < arr.length; ++i) {\n\t\t\tthis.storage.removeItem(this._parseToString(arr[i]));\n\t\t}\n\t}\n\n\t/**\n\t * Returns the size of the storage\n\t * @return {number}\n\t * @example\n\t * locker.add(12, [1,2]);\n\t * locker.size(); //1\n\t */\n\tsize() {\n\t\treturn this.storage.length;\n\t}\n\n\t/**\n\t * Parse value to stringified JSON\n\t * @param {*} value\n\t * @return {string}\n\t * @private\n\t */\n\t_parseToString(value) {\n\t\tswitch (typeof value) {\n\t\t\tcase 'number':\n\t\t\tcase 'object': {\n\t\t\t\treturn JSON.stringify(value);\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Check whether current environment supports HTML5 storage\n\t * @param {Object} storage\n\t * @return {boolean}\n\t * @private\n\t */\n\t_isSupported(storage) {\n\t\tconst mockVal = '__test';\n\t\ttry {\n\t\t\tstorage.setItem(mockVal, mockVal);\n\t\t\tstorage.removeItem(mockVal);\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t}\n}\n"],"names":["constructor","window","localStorage","sessionStorage","TypeError","_isSupported","storage","ReferenceError","add","_parseToString","setItem","addSafely","getItem","get","saveMap","prototype","toString","call","getMap","Map","length","key","set","saveSet","entries","keyExists","valueExists","clear","clearSpecified","Array","isArray","removeItem","size","JSON","stringify"],"mappings":"8EAMA,WAAe,KAAM,CAUpBA,cAAqB,CAGpB,GAAI,IAAYC,OAAOC,YAAnB,EACH,IAAYD,OAAOE,cADpB,CAEC,KAAM,IAAIC,UAAJ,CAJY,wBAIZ,CAAN,CAED,GAAI,KAAKC,YAAL,GAAJ,CACC,KAAKC,OAAL,EADD,KAGC,MAAM,IAAIC,eAAJ,CARW,oDAQX,CAEP,CAYDC,QAAgB,CAEf,OADA,EAAM,KAAKC,cAAL,GACN,CAAQ,QAAR,EACC,IAAK,QAAL,CAAe,CACd,KAAM,GAAY,KAAKA,cAAL,GAAlB,CACA,KAAKH,OAAL,CAAaI,OAAb,KAFc,CAGd,KACA,CACD,QACC,KAAKJ,OAAL,CAAaI,OAAb,KADD,CAND,CAUA,CAWDC,cAAsB,CACrB,EAAM,KAAKF,cAAL,GADe,CAErB,KAAM,GAAY,KAAKH,OAAL,CAAaM,OAAb,GAAlB,CACA,KACC,KAAM,IAAIL,eAAJ,CAAmB,gCAAnB,CAAN,CAED,KAAKC,GAAL,KACA,CASDK,MAAS,CAER,MADA,GAAM,KAAKJ,cAAL,GACN,CAAO,KAAKH,OAAL,CAAaM,OAAb,GACP,CAcDE,UAAa,CACZ,KAAM,GAAgD,cAAxC,UAAOC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,GAAd,CACA,GAAI,EAAJ,CACC,KAAM,IAAIb,UAAJ,CAAc,qBAAd,CAAN,CAED,IAAK,GAAI,KAAT,KACC,KAAKI,GAAL,KAED,CASDU,QAAS,CACR,KAAM,GAAgB,GAAIC,IAA1B,CACA,IAAK,GAAI,GAAI,CAAb,CAAgB,EAAI,KAAKb,OAAL,CAAac,MAAjC,CAAyC,GAAzC,CAA8C,CAC7C,GAAI,GAAU,KAAKX,cAAL,CAAoB,KAAKH,OAAL,CAAae,GAAb,GAApB,CAAd,CACI,EAAU,KAAKZ,cAAL,CAAoB,KAAKH,OAAL,CAAaM,OAAb,GAApB,CADd,CAEA,EAAcU,GAAd,KACA,CACD,QACA,CAcDC,UAAa,CACZ,KAAM,GAAgD,cAAxC,UAAOR,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,GAAd,CACA,GAAI,EAAJ,CACC,KAAM,IAAIb,UAAJ,CAAc,qBAAd,CAAN,CAED,IAAK,GAAI,KAAT,EAAyB,GAAIoB,OAAJ,EAAzB,CACC,KAAKhB,GAAL,KAED,CAWDiB,YAAe,CACd,MAAO,CAAC,CAAC,KAAKnB,OAAL,CAAaM,OAAb,CAAqB,KAAKH,cAAL,GAArB,CACT,CAYDiB,cAAmB,CAClB,KAAM,GAAY,KAAKjB,cAAL,GAAlB,CACA,MAAO,CAAC,EACR,CAQDkB,OAAQ,CACP,KAAKrB,OAAL,CAAaqB,KAAb,EACA,CAcDC,iBAAoB,CACnB,GAAI,CAACC,MAAMC,OAAN,GAAL,CACC,KAAM,IAAI1B,UAAJ,CAAc,oBAAd,CAAN,CAED,IAAK,GAAI,GAAI,CAAb,CAAgB,EAAI,EAAIgB,MAAxB,CAAgC,GAAhC,CACC,KAAKd,OAAL,CAAayB,UAAb,CAAwB,KAAKtB,cAAL,CAAoB,IAApB,CAAxB,CAED,CASDuB,MAAO,CACN,MAAO,MAAK1B,OAAL,CAAac,MACpB,CAQDX,iBAAsB,CACrB,OAAQ,QAAR,EACC,IAAK,QAAL,CACA,IAAK,QAAL,CACC,MAAOwB,MAAKC,SAAL,GAAP,CAED,QACC,SANF,CASA,CAQD7B,eAAsB,CACrB,KAAM,GAAU,QAAhB,CACA,GAAI,CAGH,MAFA,GAAQK,OAAR,KAEA,CADA,EAAQqB,UAAR,GACA,GACA,CAAC,QAAU,CACX,QACA,CACD,CAlPmB,CAArB"}